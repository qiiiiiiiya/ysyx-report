关注程序做什么，到关注程序如何做。
1. 把 “抽象语义” 转化为 “具体步骤”，消除模糊性
很多程序逻辑（如递归、迭代、函数调用）在宏观上是 “黑盒”，但状态机视角能打开黑盒：
例如递归函数fact(n) = n * fact(n-1)，宏观上是 “自调用”，但状态机视角下：
每次递归调用会触发状态转换：PC 跳转到函数入口，栈保存当前n和返回地址，寄存器更新参数；
递归终止时，状态逆向转换：从栈恢复上一层n，计算乘积，更新寄存器，PC 跳回返回地址。
这种拆解能清晰回答：“递归时变量存在哪里？返回时如何恢复上一层状态？”
